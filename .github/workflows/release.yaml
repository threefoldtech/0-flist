name: Build release zflist
on: push

#  release:
#    types: [created]

jobs:
  release:
    name: Release zflist (glibc, static dependencies)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source code
      uses: actions/checkout@master
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git libsnappy-dev libz-dev \
            libtar-dev libb2-dev autoconf libtool libjansson-dev \
            libhiredis-dev libsqlite3-dev libssl-dev
    
    - name: Clone capnp-c
      working-directory: 
      run: |
        git clone https://github.com/opensourcerouting/c-capnproto
        cd ./c-capnproto
        git submodule update --init --recursive

    - name: Configure capnp-c
      working-directory: ./c-capnproto
      run: |
        autoreconf -f -i -s
        ./configure

    - name: Build capnp-c
      working-directory: ./c-capnproto
      run: |
        make -j 3
        sudo make install
        sudo ldconfig

    - name: Clone libcurl
      run: |
        git clone --depth=1 -b curl-7_62_0 https://github.com/curl/curl

    - name: Configure libcurl
      working-directory: ./curl
      run: |
        autoreconf -f -i -s
        ./configure --disable-debug --enable-optimize --disable-curldebug --disable-symbol-hiding --disable-rt \
          --disable-ftp --disable-ldap --disable-ldaps --disable-rtsp --disable-proxy --disable-dict \
          --disable-telnet --disable-tftp --disable-pop3 --disable-imap --disable-smb --disable-smtp --disable-gopher \
          --disable-manual --disable-libcurl-option --disable-sspi --disable-ntlm-wb --without-brotli --without-librtmp --without-winidn \
          --disable-threaded-resolver \
          --with-openssl

    - name: Build libcurl
      working-directory: ./curl
      run: |
        make -j 3
        sudo make install
        sudo ldconfig
 
    - name: Build libflist
      working-directory: ${{ github.workspace }}/libflist
      run: |
        make
 
    - name: Build zflist binary
      working-directory: ${{ github.workspace }}/zflist
      run: |
        make production

        version=$(grep ZFLIST_VERSION zflist.h | awk '{ print $3 }' | sed s/'"'//g)

        cp zflist $GITHUB_WORKSPACE/zflist-${version}-linux-amd64-gnu
 
#    - name: Upload the artifacts
#      uses: skx/github-action-publish-binaries@master
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        args: 'zflist-*-linux-amd64-gnu'

  release-musl:
    name: Release zflist (musl, static dependencies)
    runs-on: ubuntu-latest
    container:
      image: alpine:3.17
    steps:
    - name: Checkout source code
      uses: actions/checkout@master
    
    - name: Install dependencies
      run: |
        apk add alpine-sdk git autoconf automake libtool libtar-dev zlib-dev jansson-dev \
          capnproto-dev hiredis-dev sqlite-dev libb2-dev fts musl-fts-dev linux-headers \
          snappy-dev curl-dev zlib-static sqlite-static curl-static snappy-static \
          openssl-libs-static nghttp2-static brotli-static

        echo "" | gcc -v -E - 2>&1 | grep cc1
    
    - name: Clone capnp-c
      working-directory: 
      run: |
        git clone https://github.com/opensourcerouting/c-capnproto
        cd ./c-capnproto
        git submodule update --init --recursive

    - name: Configure capnp-c
      working-directory: ./c-capnproto
      run: |
        autoreconf -f -i -s
        ./configure

    - name: Build capnp-c
      working-directory: ./c-capnproto
      run: |
        make -j 3
        make install

    - name: Fetch libjansson
      run: |
        wget https://github.com/akheron/jansson/releases/download/v2.14/jansson-2.14.tar.gz
        tar -xf jansson-2.14.tar.gz

    - name: Build libjansson
      working-directory: ./jansson-2.14
      run: |
        ./configure
        make -j 3
        make install

    - name: Fetch libblake2
      run: |
        wget https://github.com/BLAKE2/libb2/releases/download/v0.98.1/libb2-0.98.1.tar.gz
        tar -xf libb2-0.98.1.tar.gz

    - name: Build libblake2
      working-directory: ./libb2-0.98.1
      run: |
        ./configure
        make -j 3
        make install

    - name: Build libflist
      working-directory: ${{ github.workspace }}/libflist
      run: |
        make alpine
 
    - name: Build zflist binary
      working-directory: ${{ github.workspace }}/zflist
      run: |
        make s-alpine
        strip -w -K 'flist*' -K 'libflist*' zflist

        version=$(grep ZFLIST_VERSION zflist.h | awk '{ print $3 }' | sed s/'"'//g)

        cp zflist $GITHUB_WORKSPACE/zflist-${version}-linux-amd64-musl
 
#    - name: Upload the artifacts
#      uses: skx/github-action-publish-binaries@master
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        args: 'zflist-*-linux-amd64-musl'
#
